#
# Copyright 2019-2021 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only
#

if (is_android) {
  import("//build/config/android/config.gni")
  import("//build/config/android/rules.gni")
  import("//webrtc.gni")

  android_sdk = "//sdk/android"
  group("android") {
    public_deps = [
      ":libringrtc",
    ]
  }

  dist_jar("libringrtc") {
    output = "${root_out_dir}/lib.java/ringrtc/${target_name}.jar"
    direct_deps_only = true
    use_unprocessed_jars = true
    requires_android = true
    no_build_hooks = true

    deps = [
      ":ringrtc_java",
    ]
  }

  rtc_android_library("ringrtc_java") {
    sources = [
      "api/org/signal/ringrtc/BuildInfo.java",
      "api/org/signal/ringrtc/CalledByNative.java",
      "api/org/signal/ringrtc/CallId.java",
      "api/org/signal/ringrtc/CallException.java",
      "api/org/signal/ringrtc/CallManager.java",
      "api/org/signal/ringrtc/CameraControl.java",
      "api/org/signal/ringrtc/Connection.java",
      "api/org/signal/ringrtc/GroupCall.java",
      "api/org/signal/ringrtc/HttpHeader.java",
      "api/org/signal/ringrtc/Log.java",
      "api/org/signal/ringrtc/PeekInfo.java",
      "api/org/signal/ringrtc/Remote.java",
      "api/org/signal/ringrtc/Testing.java",
      "api/org/signal/ringrtc/Util.java",
      "api/org/signal/ringrtc/WebRtcLogger.java",
    ]

    _libwebrtc_jar_dir = get_label_info("${android_sdk}:libwebrtc", "dir")
    libwebrtc_jar_path = "${root_out_dir}/lib.java${_libwebrtc_jar_dir}/libwebrtc.jar"

    # Note: "//ringrtc/jar.list" is generated by
    # bin/fetch-android-deps during bin/prepare-workspace.
    jar_list = read_file("//ringrtc/jar.list", "list lines")
    input_jars_paths = [
      "$libwebrtc_jar_path",
    ] + jar_list

    deps = [
      "//third_party/android_deps:androidx_annotation_annotation_java",
      "//sdk/android:libwebrtc"
    ]

  }

}
